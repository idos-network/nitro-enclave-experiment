FROM ubuntu:latest

ARG FACETEC_SDK_VERSION
RUN if [ -z "$FACETEC_SDK_VERSION" ]; then (echo "FACETEC_SDK_VERSION must be provided as a --build-arg"; exit 1); fi

# FaceTec Directories
ARG FACETEC_CUSTOM_SERVER_DIRECTORY=./FaceTecSDK-custom-server-$FACETEC_SDK_VERSION
ARG FACETEC_SERVER_CORE_DIRECTORY=./FaceTecSDK-server-core-java-$FACETEC_SDK_VERSION

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends --no-install-suggests \
    curl \
    default-jdk \
    iproute2 \
    libgomp1 \
    maven \
    net-tools \
    nodejs \
    npm \
    iptables \
    openssh-server \
    socat \
    libnbd-bin \
    nbd-client \
    cryptsetup \
&& rm -rf /var/cache/apt/archives /var/lib/apt/lists/*

# Install AWS CLI v2
RUN apt-get update && apt-get install -y \
    curl unzip less groff \
    && rm -rf /var/lib/apt/lists/* \
    && curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip" \
    && unzip /tmp/awscliv2.zip -d /tmp \
    && /tmp/aws/install \
    && rm -rf /tmp/aws /tmp/awscliv2.zip

# Install Caddy
RUN apt-get update && apt-get install -y \
    debian-keyring debian-archive-keyring apt-transport-https curl gnupg \
    && curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg \
    && curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list \
    && chmod o+r /usr/share/keyrings/caddy-stable-archive-keyring.gpg \
    && chmod o+r /etc/apt/sources.list.d/caddy-stable.list \ 
    && apt-get update \
    && apt-get install -y caddy \
    && rm -rf /var/lib/apt/lists/*

COPY $FACETEC_CUSTOM_SERVER_DIRECTORY /home/FaceTec_Custom_Server
COPY $FACETEC_SERVER_CORE_DIRECTORY /home/FaceTec_Server_Core
COPY ./OCRTemplates /home/OCRTemplates
RUN mvn install:install-file -Dfile=/home/FaceTec_Server_Core/libs/FaceTecSDK-$FACETEC_SDK_VERSION.jar -DgroupId=com.facetec.servercore -DartifactId=server -Dversion=$FACETEC_SDK_VERSION -Dpackaging=jar
RUN mvn -f /home/FaceTec_Custom_Server/pom.xml clean package -Plinux

RUN cp /home/FaceTec_Custom_Server/config.yaml /home/FaceTec_Custom_Server/deploy
COPY ./facetec_usage_logs_server/package.json /home/FaceTec_Custom_Server/deploy/facetec_usage_logs_server/package.json
COPY ./facesign-service/ /home/FaceTec_Custom_Server/deploy/facesign-service/
COPY ./ecosystem.config.js /home/FaceTec_Custom_Server/deploy/ecosystem.config.js

WORKDIR /home/FaceTec_Custom_Server/deploy
RUN cd ./facetec_usage_logs_server && npm install
RUN cd ./facesign-service && npm install

ARG AWS_KMS_SECRETS_KEY_ID
RUN if [ -z "$AWS_KMS_SECRETS_KEY_ID" ]; then (echo "AWS_KMS_SECRETS_KEY_ID must be provided as a --build-arg"; exit 1); fi
RUN echo $AWS_KMS_SECRETS_KEY_ID > /home/FaceTec_Custom_Server/deploy/secrets_key.arn

ARG AWS_KMS_SECRETS_FACETEC_KEY_ID
RUN if [ -z "$AWS_KMS_SECRETS_FACETEC_KEY_ID" ]; then (echo "AWS_KMS_SECRETS_FACETEC_KEY_ID must be provided as a --build-arg"; exit 1); fi
RUN echo $AWS_KMS_SECRETS_FACETEC_KEY_ID > /home/FaceTec_Custom_Server/deploy/secrets_facetec_key.arn

RUN npm install -g pm2

COPY ./facetec_usage_logs_server/ /home/FaceTec_Custom_Server/deploy/facetec_usage_logs_server/
RUN sed -i 's/54.70.182.147/logs.facetec.com/' /home/FaceTec_Custom_Server/deploy/facetec_usage_logs_server/utils/logUploader.js

COPY authorized_keys /root/.ssh/authorized_keys
COPY docker-run.sh ./run.sh
COPY boot.ash ./
COPY Caddyfile ./

ARG MONGO_HOST
RUN if [ -z "$MONGO_HOST" ]; then (echo "MONGO_HOST must be provided as a --build-arg"; exit 1); fi

RUN echo "127.0.0.1 $MONGO_HOST" | tee -a /root/extra_hosts
RUN echo "127.0.0.1 $(echo "$MONGO_HOST" | sed 's#-cluster.cluster-#-cluster.#')" | tee -a /root/extra_hosts
RUN echo "127.0.0.1 logs.facetec.com" | tee -a /root/extra_hosts

# AWS kms (AWS identity are on ip tables forwarded to 127.0.0.2!)
RUN echo "127.0.0.3 kms.eu-west-1.amazonaws.com" | tee -a /root/extra_hosts

# AWS secrets S3
RUN echo "127.0.0.4 nitro-enclave-hello-secrets.s3.eu-west-1.amazonaws.com" | tee -a /root/extra_hosts
RUN echo "127.0.0.5 nitro-enclave-hello-secrets.s3-eu-west-1.amazonaws.com" | tee -a /root/extra_hosts

# Let's encrypt acme lookup
RUN echo "127.0.0.6 acme-v02.api.letsencrypt.org" | tee -a /root/extra_hosts

# FaceSign configuration
RUN sed -i 's#export const MONGO_URI = "INSERT YOUR MONGO URL HERE";#export const MONGO_URI = "mongodb://root:password@'$MONGO_HOST':27017/?retryWrites=false"#' /home/FaceTec_Custom_Server/deploy/facesign-service/env.js

# FaceTec Server configuration
RUN sed -i 's#uri: INSERT YOUR MONGO URL HERE#uri: "mongodb://root:password@'$MONGO_HOST':27017/"#' /home/FaceTec_Custom_Server/deploy/config.yaml
RUN sed -i 's#serverPort: 8080#serverPort: 5000#' /home/FaceTec_Custom_Server/deploy/config.yaml
RUN sed -i 's#enableSearch: false#enableSearch: true#' /home/FaceTec_Custom_Server/deploy/config.yaml
RUN sed -i 's#search3D3DDatabaseRootDirectory: /Users/MyUserName/Desktop/MyTestFaceTec3DDB#search3D3DDatabaseRootDirectory: /mnt/encrypted/3d-db#' /home/FaceTec_Custom_Server/deploy/config.yaml
RUN sed -i 's#search3D3DDatabaseExportRootDirectory: /Users/MyUserName/Desktop/MyTestFaceTecExported3DDB#\# search3D3DDatabaseExportRootDirectory: null#' /home/FaceTec_Custom_Server/deploy/config.yaml
RUN sed -i 's#search3D3DOneEyeCoveredDatabaseRootDirectory: /Users/MyUserName/Desktop/MyTestFaceTec3D3DOneEyeCoveredDB#\# search3D3DOneEyeCoveredDatabaseRootDirectory:#' /home/FaceTec_Custom_Server/deploy/config.yaml
RUN sed -i 's#search3D2DFacePortraitDatabaseRootDirectory: /Users/MyUserName/Desktop/MyTestFaceTec3D2DFacePortraitDB#\# search3D3DDatabaseRootDirectory:#' /home/FaceTec_Custom_Server/deploy/config.yaml
RUN sed -i 's#search3D2DKioskPOSDatabaseRootDirectory: /Users/MyUserName/Desktop/MyTestFaceTec3D2DKioskPOSDB#\# search3D3DDatabaseRootDirectory:#' /home/FaceTec_Custom_Server/deploy/config.yaml
RUN sed -i 's#search2D2DIDScanPhotoDatabaseRootDirectory: /Users/MyUserName/Desktop/MyTestFaceTec2D2DIDScanPhotoDB#\# search3D3DDatabaseRootDirectory:#' /home/FaceTec_Custom_Server/deploy/config.yaml

# FaceTec Usage Logs configuration
RUN echo "usageLogsDirectory: /mnt/encrypted/usage-logs" >> /home/FaceTec_Custom_Server/deploy/facetec_usage_logs_server/config.yml

EXPOSE 8080

CMD ["/bin/bash", "/home/FaceTec_Custom_Server/deploy/boot.ash"]
